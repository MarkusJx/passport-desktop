name: Publish

on:
    workflow_dispatch:
        inputs:
            dry-run:
                description: 'Dry run'
                type: boolean
                required: false
                default: false

jobs:
    build:
        strategy:
            matrix:
                include:
                    - target: x86_64-pc-windows-msvc
                      package: win32-x64-msvc
                      publish: true
                    - target: i686-pc-windows-msvc
                      package: win32-ia32-msvc
                      publish: false

        runs-on: windows-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Node.js environment
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x
            - name: Add rust target
              run: rustup target add ${{matrix.target}}
            - name: Install Dependencies
              run: npm ci
            - name: Build
              run: npm run build -- --target ${{matrix.target}}
            - name: Get version
              id: version
              run: echo "version=$(node -p 'require(`./package.json`).version')" >> $GITHUB_ENV
              shell: bash
            - name: Set version
              run: npm version --no-git-tag-version --allow-same-version ${{env.version}} -f
              working-directory: npm/${{matrix.package}}
            - name: Move binary
              run: mv ms-passport.*.node npm/${{matrix.package}}
              shell: bash
            - name: NPM Publish Binary
              uses: JS-DevTools/npm-publish@v1
              if: ${{matrix.publish}}
              with:
                  access: public
                  token: ${{secrets.NPM_TOKEN}}
                  package: npm/${{matrix.package}}/package.json
                  dry-run: ${{github.event.inputs.dry-run == 'true'}}
            - name: NPM Publish
              uses: JS-DevTools/npm-publish@v1
              if: ${{!matrix.publish}}
              with:
                  access: public
                  token: ${{secrets.NPM_TOKEN}}
                  dry-run: ${{github.event.inputs.dry-run == 'true'}}

    draft-release:
        needs: [build]
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event.inputs.dry-run != 'true'
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Get version
              id: version
              run: echo "version=$(node -p 'require(`./package.json`).version')" >> $GITHUB_ENV
              shell: bash
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ env.version }}
                  release_name: Release v${{ env.version }}
                  body: |
                      Auto-generated release
                  draft: true
                  prerelease: false
